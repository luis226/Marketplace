from rest_framework import serializers
from store.models import Product, User, Order


class CreateUserSerializer(serializers.ModelSerializer):
    def create(self, validated_data):
        password = validated_data.pop('password')
        user = User(
            **validated_data
        )
        
        no_spaces_first_name = user.first_name.replace(' ', '')
        no_spaces_last_name = user.last_name.replace(' ', '')
        # TODO: This username can be improved adding a random number to avoid collisions
        user.username = f'{no_spaces_first_name}{no_spaces_last_name}'
        user.set_password(password)
        user.save()

        return user

    class Meta:
        model = User
        fields = (
            'first_name', 
            'last_name',
            'email',
            'sex',
            'type',
            'password',
            'username'
        )
        extra_kwargs = {
            'first_name' : {'required': True},
            'last_name' : {'required': True},
            'email' : {'required': True},
            'sex' : {'required': True},
            'type' : {'required': True},
            # Password should not be serialized
            'password' : {'required': True, 'write_only': True},
            # Username is generated by the system first + last name without spaces
            'username': {'read_only': True},
        }


class ProductSerializer(serializers.ModelSerializer):
    selled_by__username = serializers.SlugRelatedField(read_only=True, slug_field='username')
    selled_by = serializers.SlugRelatedField(queryset=User.objects.all(), slug_field='uuid')
    class Meta:
        model = Product
        fields = (
            'price',
            'selled_by',
            'selled_by__username',
            'stock',
            'created',
            'name',
            'description',
            'uuid'
        )
        extra_kwargs = {
            'price': {'required': True},
            'selled_by': {'required': True},
            'stock': {'required': True},
            'created': {'read_only': True},
            'name': {'required': True},
        }


class OrderSerializer(serializers.ModelSerializer):
    product = serializers.SlugRelatedField(queryset=Product.objects.all(), slug_field='uuid')
    buyer = serializers.SlugRelatedField(queryset=User.objects.all(), slug_field='uuid')

    class Meta:
        model = Order
        fields = (
            'product',
            'units',
            'buyer',
            'status',
            'created',
            'modified'
        )
        extra_kwargs = {
            'status': {'read_only': True},
            'created': {'read_only': True},
            'modified': {'read_only': True}
        }
